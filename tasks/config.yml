# Copyright 2018-2023 Chris Croome
#
# This file is part of the Webarchitects Apache Ansible role.
#
# The Webarchitects Apache Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Apache Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Apache Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Apache config available
  block:

    - name: Directories present
      ansible.builtin.file:
        path: "{{ path }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - "{{ apache_document_root }}"
        - "{{ apache_document_root }}/.well-known/acme-challenge"
      loop_control:
        loop_var: path
        label: "{{ path }}"

    - name: Custom Apache config in place
      ansible.builtin.template:
        src: "{{ file }}.j2"
        dest: "/etc/apache2/{{ file }}"
        owner: root
        group: root
        mode: "0644"
      loop:
        - apache2.conf
        - ports.conf
      loop_control:
        loop_var: file
        label: "{{ file }}"

    - name: Custom Apache mods available in place
      ansible.builtin.template:
        src: "{{ file }}.j2"
        dest: "/etc/apache2/mods-available/{{ file }}"
        owner: root
        group: root
        mode: "0644"
      loop:
        - http2.conf
        - md.conf
        - mime.conf
        - ssl.conf
      loop_control:
        loop_var: file
        label: "{{ file }}"

    - name: Custom Apache conf available in place
      ansible.builtin.template:
        src: "{{ file }}.j2"
        dest: "/etc/apache2/conf-available/{{ file }}"
        owner: root
        group: root
        mode: "0644"
      loop:
        - le.conf
        - version-control.conf
      loop_control:
        loop_var: file
        label: "{{ file }}"

    - name: Conditional update 000-default.conf
      ansible.builtin.template:
        src: 000-default.conf.j2
        dest: /etc/apache2/sites-available/000-default.conf
        owner: root
        group: root
        mode: "0644"
      when: ( apache_sites_enabled is defined ) and ( "000-default" in apache_sites_enabled )

    - name: Conditional update default-ssl.conf
      ansible.builtin.template:
        src: default-ssl.conf.j2
        dest: /etc/apache2/sites-available/default-ssl.conf
        owner: root
        group: root
        mode: "0644"
      when: ( apache_sites_enabled is defined ) and ( "default-ssl" in apache_sites_enabled )

    - name: Apache localhost site available
      ansible.builtin.template:
        src: "templates/localhost.conf.j2"
        dest: "/etc/apache2/sites-available/localhost.conf"
        owner: root
        group: root
        mode: "0644"

    - name: Conditionally include Webarchitects config
      ansible.builtin.include_tasks: webarch.yml
      when: ( apache_conf_enabled is defined ) and ( "webarch" in apache_conf_enabled )

    - name: Conditionally include mc3 config
      ansible.builtin.include_tasks: mc3.yml
      when: ( apache_conf_enabled is defined ) and ( "mc3" in apache_conf_enabled )

    - name: Apache localhost and localhost.d directories in place
      ansible.builtin.file:
        path: "{{ dir }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - /var/www/localhost
        - /etc/apache2/localhost.d
      loop_control:
        loop_var: dir
        label: "{{ dir }}"

    - name: Deny robots files in place
      ansible.builtin.template:
        src: robots.deny.txt.j2
        dest: /var/www/html/robots.deny.txt
        owner: root
        group: root
        mode: "0644"

    - name: Expires and robots conf available
      ansible.builtin.template:
        src: "templates/{{ file }}.j2"
        dest: "/etc/apache2/conf-available/{{ file }}"
        owner: root
        group: root
        mode: "0644"
      loop:
        - robots-deny.conf
        - robots-deny-nextcloud.conf
        - expires-forever.conf
        - expires-strict.conf
        - expires-medium.conf
      loop_control:
        loop_var: file
        label: "{{ file }}"

    - name: Apache mpm_prefork.conf in place
      ansible.builtin.template:
        src: templates/mpm_prefork.conf.j2
        dest: /etc/apache2/mods-available/mpm_prefork.conf
        owner: root
        group: root
        mode: "0644"
      when: ( "mpm_prefork" in apache_mods_enabled )

    - name: Apache ratelimit conf present
      ansible.builtin.template:
        src: templates/ratelimit.conf.j2
        dest: /etc/apache2/mods-available/ratelimit.conf
        owner: root
        group: root
        mode: "0644"
      when: '"ratelimit" in apache_mods_enabled'

    - name: Cloudflare config available
      ansible.builtin.include_tasks: cloudflare.yml
      when: ( "remoteip" in apache_mods_enabled )

    - name: Conditionally provision a Let's Encrypt cert using acmesh role
      block:

        - name: Ensure that the acme.sh has been installed
          ansible.builtin.include_role:
            name: acmesh
            tasks_from: acmesh.yml

        - name: "Provision a Let's Encrypt cert for {{ inventory_hostname }}"  # noqa: var-naming[no-role-prefix]
          ansible.builtin.include_role:
            name: acmesh
            tasks_from: letsencrypt.yml
          vars:
            acmesh_common_name: "{{ inventory_hostname }}"

      when:
        - ( "md" not in apache_mods_enabled ) or ( apache_cert.stat is defined and not apache_cert.stat.exists )
        - ( "ssl" in apache_mods_enabled )
        - ( "le" in apache_conf_enabled )
        - ( acmesh_common_name is defined ) and ( acmesh_common_name == inventory_hostname )

  tags:
    - apache
...
