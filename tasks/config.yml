---
- name: Apache config available
  block:

    - name: Directories present
      file:
        path: "{{ path }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      loop:
        - "{{ apache_document_root }}"
        - "{{ apache_document_root }}/.well-known/acme-challenge"
      loop_control:
        loop_var: path
        label: "{{ path }}"

    - name: Conditional update 000-default.conf
      template:
        src: 000-default.conf.j2
        dest: /etc/apache2/sites-available/000-default.conf
        owner: root
        group: root
        mode: 0644
      when: ( apache_sites_enabled is defined ) and ( "000-default" in apache_sites_enabled )

    - name: Conditional update default-ssl.conf
      template:
        src: default-ssl.conf.j2
        dest: /etc/apache2/sites-available/default-ssl.conf
        owner: root
        group: root
        mode: 0644
      when: ( apache_sites_enabled is defined ) and ( "default-ssl" in apache_sites_enabled )

    - name: Conditionally include Webarchitects config
      include_tasks: webarch.yml
      when: ( apache_conf_enabled is defined ) and ( "webarch" in apache_conf_enabled )

    - name: Conditionally include mc3 config
      include_tasks: mc3.yml
      when: ( apache_conf_enabled is defined ) and ( "mc3" in apache_conf_enabled )

    - name: Let's Encrypt /.well-known/acme-challenge server-wide alias available
      template:
        src: templates/le.conf.j2
        dest: /etc/apache2/conf-available/le.conf
        owner: root
        group: root
        mode: 0644

    - name: Custom Apache md config available
      template:
        src: md.conf.j2
        dest: /etc/apache2/mods-available/md.conf
        owner: root
        group: root
        mode: 0644

    - name: Custom Apache http2 config available
      template:
        src: http2.conf.j2
        dest: /etc/apache2/mods-available/http2.conf
        owner: root
        group: root
        mode: 0644

    - name: Custom Apache ssl.conf available
      template:
        src: ssl.conf.j2
        dest: /etc/apache2/mods-available/ssl.conf
        owner: root
        group: root
        mode: 0644

    - name: Custom Apache ports.conf available
      template:
        src: ports.conf.j2
        dest: /etc/apache2/ports.conf
        owner: root
        group: root
        mode: 0644

    - name: Conf available to deny access to version control directories in place
      template:
        src: version-control.conf.j2
        dest: /etc/apache2/conf-available/version-control.conf
        owner: root
        group: root
        mode: 0644

    - name: Conditionally provision a Let's Encrypt cert using acmesh role
      block:

        - name: "Provision a Let's Encrypt cert for {{ inventory_hostname }}"
          include_role:
            name: acmesh
            tasks_from: letsencrypt
          vars:
            common_name: "{{ inventory_hostname }}"

      when:
        - ( "md" not in apache_mods_enabled ) or ( apache_cert.stat is defined and not apache_cert.stat.exists )
        - ( "ssl" in apache_mods_enabled )
        - ( "le" in apache_conf_enabled )
        - ( common_name is defined ) and ( common_name == inventory_hostname )

    - name: Apache localhost and localhost.d directories in place
      file:
        path: "{{ dir }}"
        state: directory
      loop:
        - /var/www/localhost
        - /etc/apache2/localhost.d
      loop_control:
        loop_var: dir
        label: "{{ dir }}"

    - name: Apache localhost site available
      template:
        src: "templates/localhost.conf.j2"
        dest: "/etc/apache2/sites-available/localhost.conf"

    - name: Deny robots files in place
      template:
        src: robots.deny.txt.j2
        dest: /var/www/html/robots.deny.txt

    - name: Expires and robots conf available
      template:
        src: "templates/{{ file }}.j2"
        dest: "/etc/apache2/conf-available/{{ file }}"
      loop:
        - robots-deny.conf
        - robots-deny-nextcloud.conf
        - expires-strict.conf
        - expires-medium.conf
      loop_control:
        loop_var: file
        label: "{{ file }}"

    - name: Apache mpm_prefork.conf in place
      template:
        src: templates/mpm_prefork.conf.j2
        dest: /etc/apache2/mods-available/mpm_prefork.conf
      when: ( "mpm_itk" in apache_mods_enabled ) or ( "mpm_prefork" in apache_mods_enabled )

    - name: Apache ratelimit conf present
      template:
        src: templates/ratelimit.conf.j2
        dest: /etc/apache2/mods-available/ratelimit.conf
      when: '"ratelimit" in apache_mods_enabled'

    - name: Cloudflare config available
      include_tasks: cloudflare.yml
      when: '"remoteip" in apache_mods_enabled'

  tags:
    - apache
...
