# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects Apache Ansible role.
#
# The Webarchitects Apache Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Apache Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Apache Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Apache modules disabled
  block:

    - name: Apache FastCGI absent
      ansible.builtin.apt:
        pkg:
          - libapache2-mod-fcgid
        state: absent
        update_cache: false
      when:
        - ( "fcgid" in apache_mods_disabled )
        - ( "libapache2-mod-fcgid" in ansible_local.dpkg.installed )
      notify: Restart Apache

    - name: Apache suEXEC package absent
      ansible.builtin.apt:
        pkg:
          - apache2-suexec-pristine
        state: absent
        update_cache: false
      when:
        - ( "suexec" in apache_mods_disabled )
        - ( "apache2-suexec-pristine" in ansible_local.dpkg.installed )
      notify: Restart Apache

    - name: "Apache package absent {{ apache_phpfpm_mod }}"
      ansible.builtin.apt:
        pkg:
          - "{{ apache_mod_php_pkg }}"
        state: absent
        update_cache: false
      vars:
        apache_mod_php_pkg: "libapache2-mod-php{{ apache_php_version }}"
      when:
        - apache_php | bool
        - ( "apache_phpfpm_mod" in apache_mods_disabled )
        - ( apache_mod_php_pkg in ansible_local.dpkg.installed )
      notify: Restart Apache

    - name: Disable modules
      community.general.apache2_module:
        name: "{{ apache_mod }}"
        state: absent
      when: apache_mod in ansible_local.a2query.modules_enabled
      loop: "{{ apache_mods_disabled }}"
      loop_control:
        loop_var: apache_mod
        label: "{{ apache_mod }}"
      notify: Restart Apache

    - name: Re-read Ansible local facts
      ansible.builtin.setup:
        filter: ansible_local

  when:
    - apache_mods_disabled is defined
    - apache_mods_disabled != []
    - apache_mods_disabled | ansible.builtin.intersect(ansible_local.a2query.modules_enabled) != []
  tags:
    - apache

- name: Apache modules enabled
  block:

    - name: Apache Suexec package present
      ansible.builtin.apt:
        pkg:
          - apache2-suexec-pristine
        state: present
        update_cache: false
      when:
        - ( "suexec" in apache_mods_enabled )
        - ( "apache2-suexec-pristine" not in ansible_local.dpkg.installed )
      notify: Restart Apache

    - name: Apache FastCGI package present
      ansible.builtin.apt:
        pkg:
          - libapache2-mod-fcgid
        state: present
        update_cache: false
      when:
        - ( "fcgid" in apache_mods_enabled )
        - ( "libapache2-mod-fcgid" not in ansible_local.dpkg.installed )
      notify: Restart Apache

    - name: Apache mod_php package present
      ansible.builtin.apt:
        pkg:
          - "{{ apache_mod_php_pkg }}"
        state: present
        update_cache: false
      vars:
        apache_mod_php_pkg: "libapache2-mod-php{{ apache_php_version }}"
      when:
        - apache_php | bool
        - ( "apache_phpfpm_mod" in apache_mods_enabled )
        - ( apache_mod_php_pkg not in ansible_local.dpkg.installed )
      notify: Restart Apache

    # - name: Check that all the modules to be enabled exist
    #   ansible.builtin.stat:
    #     path: "/etc/apache2/mods-available/{{ apache_mod }}.load"
    #   when: apache_mod not in ansible_local.a2query.modules_enabled
    #   register: apache_mod_path
    #   failed_when:
    #     - not ansible_check_mode | bool
    #     - not apache_mod_path.stat.exists | bool
    #   loop: "{{ apache_mods_enabled }}"
    #   loop_control:
    #     loop_var: apache_mod
    #     label: "{{ apache_mod }}"

    - name: Apache modules enabled
      community.general.apache2_module:
        name: "{{ apache_mod }}"
        state: present
      when: apache_mod not in ansible_local.a2query.modules_enabled
      loop: "{{ apache_mods_enabled }}"
      loop_control:
        loop_var: apache_mod
        label: "{{ apache_mod }}"
      notify: Restart Apache

    - name: Re-read Ansible local facts
      ansible.builtin.setup:
        filter: ansible_local

  when:
    - apache_mods_enabled is defined
    - apache_mods_enabled != []
    - apache_mods_enabled | ansible.builtin.difference(ansible_local.a2query.modules_enabled) != []
  tags:
    - apache
...
